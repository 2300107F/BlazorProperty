@page "/properties/details"
@using Microsoft.EntityFrameworkCore
@using BlazorProperty.Domain
@inject IDbContextFactory<BlazorProperty.Data.BlazorPropertyContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Property Details</PageTitle>

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-info text-white">
            <h2 class="mb-0">Property Details</h2>
        </div>
        <div class="card-body">
            @if (property is null)
            {
                <div class="text-center">
                    <div class="spinner-border text-info" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-2"><em>Loading...</em></p>
                </div>
            }
            else
            {
                <dl class="row">
                    <dt class="col-sm-3">Property Name</dt>
                    <dd class="col-sm-9">@property.PropertyName</dd>
                    <dt class="col-sm-3">Address</dt>
                    <dd class="col-sm-9">@property.Address</dd>
                    <dt class="col-sm-3">Price</dt>
                    <dd class="col-sm-9">@property.Price</dd>
                    <dt class="col-sm-3">Property Type</dt>
                    <dd class="col-sm-9">@property.PropertyType</dd>
                    <dt class="col-sm-3">Bedrooms</dt>
                    <dd class="col-sm-9">@property.Bedrooms</dd>
                    <dt class="col-sm-3">Bathrooms</dt>
                    <dd class="col-sm-9">@property.Bathrooms</dd>
                    <dt class="col-sm-3">Square Feet</dt>
                    <dd class="col-sm-9">@property.Sqft</dd>
                    <dt class="col-sm-3">Region ID</dt>
                    <dd class="col-sm-9">@property.RegionId</dd>
                </dl>

                <div class="d-flex justify-content-between">
                    <a href="@($"/properties/edit?propertyid={property.PropertyId}")" class="btn btn-outline-primary">Edit</a>
                    <a href="/properties" class="btn btn-outline-secondary">Back to List</a>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private Property? property;

    [SupplyParameterFromQuery]
    private int PropertyId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        property = await context.Property.FirstOrDefaultAsync(m => m.PropertyId == PropertyId);

        if (property is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
